function git_branch
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
end

# Safety
alias rm="rm -i"
alias mv="mv -i"
alias cp="cp -i"

# Nav
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias md='mkdir'
alias du='du -h'
alias l='ls'
alias ll='ls -Ahl'
alias tree='tree -A -C -L 2'

# Git
alias clean='git clean -xdf'
alias clone='git clone'
alias addall='git add -A && git status -s'
alias push='git push'
alias pushupstream='git push --set-upstream origin $(git_branch)'
alias pull='git pull && git status -s'
function commit
  git commit -a -m "$argv"
end
alias amend='git commit --amend'
alias amendall='git add -A && git commit --amend --no-edit -n'
alias fetch='git fetch && git status -s'
alias rebasemain='git fetch && git rebase origin/main; git status -s'
function st
  git status | sed -n '/Your/,/^$/p' && \
  git status -s && echo && \
  git log --pretty=format:"%h - <%an> %s (%cr)" --date=relative -3 && echo
end
alias br='git branch -vv'
alias co='git checkout'
alias unstage='git reset HEAD'
alias log='git log --pretty=format:"%h - <%an> %s (%cr)" --date=relative -10 $argv'
alias logsince='git rev-list head --not $argv'
alias mylog='git log --pretty=format:"%h - <%an> %s (%cr)" --date=relative -10 --author=yasser.elsayed'
alias stash='git stash save'
alias unstash='git stash pop'
alias stashes='git stash list'
alias pick='git cherry-pick'
alias trackedbranch='git rev-parse --abbrev-ref --symbolic-full-name @{u}'
alias grbc="git rebase --continue"
alias grba="git rebase --abort"
function odd
  git difftool -y -d $1..$2
end

# grep
function mygrep
  grep -rnIi "$1" . --color; $argv
end

# grep options
export GREP_COLOR='1;31' # green for matches

# tmux
alias tmux='tmux -2'

# kubectl
alias k=kubectl
alias kget="kubectl get"
alias kdesc="kubectl describe"
alias kx=kubectx
alias kn=kubens
alias klog="kubectl logs"
alias kall="kubectl get all"
alias kpod="kubectl get pod"
function ksecret
  kubectl get secret $argv -o go-template='{{range $k,$v := .data}}{{printf "%s: " $k}}{{if not $v}}{{$v}}{{else}}{{$v | base64decode}}{{end}}{{"\n"}}{{end}}'
end
function kexec
  kubectl exec -it $argv -- /bin/bash
end

